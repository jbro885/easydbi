// Generated by CoffeeScript 1.12.5
(function() {
  var Errorlet, arrayify, arrayifyOptions, debug, escape;

  debug = require('debug')('easydbi');

  Errorlet = require('errorlet');

  arrayifyOptions = {
    key: '?',
    merge: false
  };

  arrayify = function(stmt, args, options) {
    var i, key, keyVal, len, newStmt, outputArgs, outputSegments, seg, segments;
    if (options == null) {
      options = arrayifyOptions;
    }
    debug('query.arrayify', stmt, args, options);
    segments = stmt.split(/(\$\w+)/g);
    outputSegments = [];
    outputArgs = [];
    for (i = 0, len = segments.length; i < len; i++) {
      seg = segments[i];
      if (seg.match(/^\$/)) {
        key = seg.substring(1);
        if (!args.hasOwnProperty(key)) {
          Errorlet.raise({
            error: 'EASYDBI.query.arrayify:missing_argument',
            key: key,
            args: args,
            stmt: stmt
          });
        } else if (options.merge) {
          outputSegments.push(escape(args[key]));
        } else if ((typeof options.key === 'function') || (options.key instanceof Function)) {
          keyVal = options.key();
          outputSegments.push(keyVal);
          outputArgs.push(args[key]);
        } else {
          outputSegments.push(options.key);
          outputArgs.push(args[key]);
        }
      } else {
        outputSegments.push(seg);
      }
    }
    newStmt = outputSegments.join('');
    debug('arrayify.output', newStmt, outputArgs, outputSegments);
    return [newStmt, outputArgs];
  };

  escape = function(arg) {
    if (typeof arg === 'string') {
      return "'" + arg.replace(/'/, "\\'") + "'";
    } else if (arg(intanceof(Date))) {
      return escape(arg.toString());
    } else if (arg instanceof Object) {
      return Errorlet.raise({
        error: 'EASYDBI.query.escape:invalid_argument',
        arg: arg
      });
    } else {
      return arg;
    }
  };

  module.exports = {
    arrayify: arrayify
  };

}).call(this);
